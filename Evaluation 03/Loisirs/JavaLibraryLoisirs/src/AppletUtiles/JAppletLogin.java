/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppletUtiles;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import javax.swing.JOptionPane;

/**
 *
 * @author adrie
 */
public class JAppletLogin extends javax.swing.JApplet
{

    /**
     * Initializes the applet JAppletLogin
     */
    @Override
    public void init()
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(JAppletLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(JAppletLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(JAppletLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(JAppletLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try
        {
            java.awt.EventQueue.invokeAndWait(new Runnable()
            {
                public void run()
                {
                    initComponents();
                }
            });
        } catch (Exception ex)
        {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loginTF = new javax.swing.JTextField();
        pwdTF = new javax.swing.JTextField();
        entrerB = new javax.swing.JButton();
        passwordB = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setText("Votre identifiant :");

        jLabel2.setText("Votre mot de passe :");

        entrerB.setText("Entrer sur le site");
        entrerB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                entrerBActionPerformed(evt);
            }
        });

        passwordB.setText("Je n'ai pas de mot de passe");
        passwordB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                passwordBActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Bienvenue sur PFM Loisirs ! Le site des loisirs verts près de chez vous ! ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(loginTF, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pwdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(entrerB)
                        .addGap(197, 197, 197))))
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(passwordB)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(loginTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pwdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(entrerB)
                .addGap(18, 18, 18)
                .addComponent(passwordB)
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void entrerBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_entrerBActionPerformed
    {//GEN-HEADEREND:event_entrerBActionPerformed
        if(loginTF.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Le login doit être rempli !");
            return;
        }
        if(pwdTF.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Le password doit être rempli !");
            return;
        }
        
        try
        {
            String adresseServlet = "/WebApplicationLoisirs/ConnexionServlet";
            URL pageCourante = getDocumentBase();
            System.out.println("getDoc =" + pageCourante);
            String protocole = pageCourante.getProtocol();
            String machine = pageCourante.getHost();
            int port = pageCourante.getPort();
            System.out.println("p="+protocole+" m=" + machine + " port=" + port);
            URL urlServlet = new URL(protocole,machine,port,adresseServlet);
            
            URLConnection connexion = urlServlet.openConnection();
            System.out.println("Connexion ouverte");
            connexion.setUseCaches(false);
            connexion.setDefaultUseCaches(false);
            connexion.setDoOutput(true);
            
            System.out.println("Ouverture permise");
            ByteArrayOutputStream baos = new ByteArrayOutputStream(512);
            PrintWriter pw = new PrintWriter(baos,true);
            System.out.println("Printwriter ok");
            
            String n = loginTF.getText();
            String p = pwdTF.getText();
            String infos = "type=connexion" + "&login=" + URLEncoder.encode(n) + "&pwd=" + URLEncoder.encode(p);
            System.out.println(infos);
            pw.print(infos);
            pw.flush();
            
            System.out.println("infos Printwriter ok");
            String longueurEnvoyee = String.valueOf(baos.size());
            connexion.setRequestProperty("Content-Length", longueurEnvoyee);
            connexion.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
            System.out.println("SetRequestProperty ok");
            baos.writeTo(connexion.getOutputStream());
            System.out.println("getoutputStream ok");
            
            BufferedReader entree = new BufferedReader(new InputStreamReader(connexion.getInputStream()));
            System.out.println("getinputStream ok");
            String reponse;
            while((reponse=entree.readLine())!=null)
            {
                if(!reponse.equals("OK"))
                {
                    JOptionPane.showMessageDialog(this,reponse);
                }
                else
                {
                    String adresseJsp = "/WebApplicationLoisirs/JSPInit.jsp" + "?login="+ URLEncoder.encode(n);
                    URL urlJsp = new URL(protocole,machine,port,adresseJsp);
                
                    getAppletContext().showDocument(urlJsp);
                    
                }
            }
            
        }
        catch(MalformedURLException ex)
        {
            System.err.println("URL malformée :"  + ex.getMessage());
        }
        catch(IOException ex)
        {
            System.err.println("Problème ouverture connexion ! : " + ex.getMessage());
        }
        
        
    }//GEN-LAST:event_entrerBActionPerformed

    private void passwordBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_passwordBActionPerformed
    {//GEN-HEADEREND:event_passwordBActionPerformed
        try
        {
            String adresseServlet = "/WebApplicationLoisirs/ConnexionServlet";
            URL pageCourante = getDocumentBase();
            System.out.println("getDoc =" + pageCourante);
            String protocole = pageCourante.getProtocol();
            String machine = pageCourante.getHost();
            int port = pageCourante.getPort();
            System.out.println("p="+protocole+" m=" + machine + " port=" + port);
            URL urlServlet = new URL(protocole,machine,port,adresseServlet);
            
            URLConnection connexion = urlServlet.openConnection();
            System.out.println("Connexion ouverte");
            connexion.setUseCaches(false);
            connexion.setDefaultUseCaches(false);
            connexion.setDoOutput(true);
            
            System.out.println("Ouverture permise");
            ByteArrayOutputStream baos = new ByteArrayOutputStream(512);
            PrintWriter pw = new PrintWriter(baos,true);
            System.out.println("Printwriter ok");
            
            String n = loginTF.getText();
            String p = pwdTF.getText();
            String infos = "type=verifLogin" + "&login=" + URLEncoder.encode(n);
            System.out.println(infos);
            pw.print(infos);
            pw.flush();
            
            System.out.println("infos Printwriter ok");
            String longueurEnvoyee = String.valueOf(baos.size());
            connexion.setRequestProperty("Content-Length", longueurEnvoyee);
            connexion.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
            System.out.println("SetRequestProperty ok");
            baos.writeTo(connexion.getOutputStream());
            System.out.println("getoutputStream ok");
            
            BufferedReader entree = new BufferedReader(new InputStreamReader(connexion.getInputStream()));
            System.out.println("getinputStream ok");
            String reponse;
            while((reponse=entree.readLine())!=null)
            {   
                if(!reponse.equals("OK"))
                {
                    JOptionPane.showMessageDialog(this,reponse);
                }
                else
                {
                    String adresseHtml = "/WebApplicationLoisirs/Password.html" + "?login="+ URLEncoder.encode(n);
                    URL urlJsp = new URL(protocole,machine,port,adresseHtml);
                    
                    getAppletContext().showDocument(urlJsp);
                }
                
            }
            
        }
        catch(MalformedURLException ex)
        {
            System.err.println("URL malformée :"  + ex.getMessage());
        }
        catch(IOException ex)
        {
            System.err.println("Problème ouverture connexion ! : " + ex.getMessage());
        }
    }//GEN-LAST:event_passwordBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton entrerB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField loginTF;
    private javax.swing.JButton passwordB;
    private javax.swing.JTextField pwdTF;
    // End of variables declaration//GEN-END:variables
}
