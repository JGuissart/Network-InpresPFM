/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppletUtiles;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author adrie
 */
public class JAppletPassword extends javax.swing.JApplet
{
    private HashMap<String, String> paramValue = new HashMap<String, String>();

    /**
     * Initializes the applet JAppletPassword
     */
    @Override
    public void init()
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(JAppletPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(JAppletPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(JAppletPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(JAppletPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        
        try
        {
            java.awt.EventQueue.invokeAndWait(new Runnable()
            {
                public void run()
                {
                    initComponents();
                }
            });
            
            String url = getDocumentBase().toString();
	   
	   if (url.indexOf("?") > -1) 
           {
		   String paramaters = url.substring(url.indexOf("?") + 1);
		   parseParam(paramaters);
	   }
           
           loginL.setText(paramValue.get("login"));
        } catch (Exception ex)
        {
            ex.printStackTrace();
        }
    }
    
    private void parseParam(String parameters)
    {
	  
        StringTokenizer paramGroup = new StringTokenizer(parameters, "&");

        while(paramGroup.hasMoreTokens())
        {
            StringTokenizer value = new StringTokenizer(paramGroup.nextToken(), "=");
            paramValue.put(value.nextToken(), value.nextToken());
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        okB = new javax.swing.JButton();
        annulerB = new javax.swing.JButton();
        loginL = new javax.swing.JLabel();
        pwdTF = new javax.swing.JTextField();
        verifTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("Votre identifiant :");

        jLabel2.setText("Choisissez un mot de passe :");

        jLabel3.setText("Confirmer votre mot de passe :");

        okB.setText("Ok");
        okB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                okBActionPerformed(evt);
            }
        });

        annulerB.setText("Annuler");

        loginL.setText("identifiant");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Bienvenue sur PFM Loisirs ! Le site de loisirs verts pr√®s de chez vous !");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(verifTF))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pwdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(loginL))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(okB)
                        .addGap(18, 18, 18)
                        .addComponent(annulerB)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(loginL))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pwdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(verifTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okB)
                    .addComponent(annulerB))
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void okBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okBActionPerformed
    {//GEN-HEADEREND:event_okBActionPerformed
        if(pwdTF.getText().equals(verifTF.getText()))
        {
            try
            {
                String adresseServlet = "/WebApplicationLoisirs/ConnexionServlet";
                URL pageCourante = getDocumentBase();
                System.out.println("getDoc =" + pageCourante);
                String protocole = pageCourante.getProtocol();
                String machine = pageCourante.getHost();
                int port = pageCourante.getPort();
                System.out.println("p="+protocole+" m=" + machine + " port=" + port);
                URL urlServlet = new URL(protocole,machine,port,adresseServlet);

                URLConnection connexion = urlServlet.openConnection();
                System.out.println("Connexion ouverte");
                connexion.setUseCaches(false);
                connexion.setDefaultUseCaches(false);
                connexion.setDoOutput(true);

                System.out.println("Ouverture permise");
                ByteArrayOutputStream baos = new ByteArrayOutputStream(512);
                PrintWriter pw = new PrintWriter(baos,true);
                System.out.println("Printwriter ok");

                String n = loginL.getText();
                String p = pwdTF.getText();
                String infos = "type=password" + "&login=" + URLEncoder.encode(n) + "&pwd=" + URLEncoder.encode(p);
                System.out.println(infos);
                pw.print(infos);
                pw.flush();

                System.out.println("infos Printwriter ok");
                String longueurEnvoyee = String.valueOf(baos.size());
                connexion.setRequestProperty("Content-Length", longueurEnvoyee);
                connexion.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
                System.out.println("SetRequestProperty ok");
                baos.writeTo(connexion.getOutputStream());
                System.out.println("getoutputStream ok");

                BufferedReader entree = new BufferedReader(new InputStreamReader(connexion.getInputStream()));
                System.out.println("getinputStream ok");
                String reponse;
                while((reponse=entree.readLine())!=null)
                {
                    if(!reponse.equals("OK"))
                    {
                        JOptionPane.showMessageDialog(this,reponse);
                    }
                    else
                    {
                        String adresseJsp = "/WebApplicationLoisirs/JSPInit.jsp"+ "?login="+ URLEncoder.encode(n);
                        URL urlJsp = new URL(protocole,machine,port,adresseJsp);

                        getAppletContext().showDocument(urlJsp);
                    }
                }

            }
            catch(MalformedURLException ex)
            {
                System.err.println("URL malform√©e :"  + ex.getMessage());
            }
            catch(IOException ex)
            {
                System.err.println("Probl√®me ouverture connexion ! : " + ex.getMessage());
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Les mots de passe doivent √™tre identiques");
            return;
        }
    }//GEN-LAST:event_okBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annulerB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel loginL;
    private javax.swing.JButton okB;
    private javax.swing.JTextField pwdTF;
    private javax.swing.JTextField verifTF;
    // End of variables declaration//GEN-END:variables
}
