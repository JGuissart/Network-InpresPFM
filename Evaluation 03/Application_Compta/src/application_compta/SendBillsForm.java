/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application_compta;

import Commandes.SendBills;
import Encryption.Cryptographie;
import RequeteReponseBISAMAP.ReponseBISAMAP;
import RequeteReponseBISAMAP.RequeteBISAMAP;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.SecretKey;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Julien
 */
public class SendBillsForm extends javax.swing.JDialog 
{
    private DefaultListModel dlmFacturesOk;
    private DefaultListModel dlmFacturesNok;
    private ArrayList<String> ListFactures;
    private Socket CSocket;
    private SecretKey CleChiffrement;
    private String PathKeyStore;
    private String AliasKeyStore;
    private String PasswordKeyStore;
    private String PasswordKey;

    /**
     * Creates new form SendBillsForm
     */
    public SendBillsForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public SendBillsForm(java.awt.Frame parent, boolean modal, Socket CSocket, SecretKey CleChiffrement, String PathKeyStore, String AliasKeyStore, String PasswordKeyStore, String PasswordKey) 
    {
        super(parent, modal);
        initComponents();
        dlmFacturesOk = new DefaultListModel();
        dlmFacturesNok = new DefaultListModel();
        lstFacturesOk.setModel(dlmFacturesOk);
        lstFacturesNok.setModel(dlmFacturesNok);
        this.CSocket = CSocket;
        this.CleChiffrement= CleChiffrement;
        this.PathKeyStore = PathKeyStore;
        this.AliasKeyStore = AliasKeyStore;
        this.PasswordKeyStore = PasswordKeyStore;
        this.PasswordKey = PasswordKey;
        GetBills();
    }
    
    private void GetBills()
    {
        try 
        {
            ObjectOutputStream oos = new ObjectOutputStream(CSocket.getOutputStream());
            RequeteBISAMAP req = new RequeteBISAMAP(RequeteBISAMAP.REQUEST_GET_BILLS, "VALIDEE");
            oos.writeObject(req);
            oos.flush();
            
            /* Attente de réponse */
            ObjectInputStream ois = null;
            ReponseBISAMAP rep = null;
            ois = new ObjectInputStream(CSocket.getInputStream());
            rep = (ReponseBISAMAP)ois.readObject();
            
            if(rep.getCode() == ReponseBISAMAP.REPONSE_OK)
            {
                byte[] reponse = (byte[])rep.getResult();
                ListFactures = (ArrayList<String>)Cryptographie.Dechiffrement(CleChiffrement, reponse);
                FillListFactures();
            }
            else
                JOptionPane.showMessageDialog(this, (String)rep.getResult(), "Erreur lors de la récupération de la liste des factures", JOptionPane.ERROR_MESSAGE);
        }
        catch (IOException ex)
        {
            Logger.getLogger(SendBillsForm.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (ClassNotFoundException ex)
        {
            Logger.getLogger(SendBillsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void FillListFactures()
    {
        dlmFacturesOk.clear();
        for(int i = 0; i < ListFactures.size(); i++)
            dlmFacturesOk.addElement(ListFactures.get(i));
        
        JOptionPane.showMessageDialog(this, "Selectionnez les factures dans la liste de gauche si vous ne voulez pas l'envoyer", "Envoyer les factures", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstFacturesOk = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstFacturesNok = new javax.swing.JList();
        btnNotSend = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        btnEnvoyerFactures = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Factures prêtes à être envoyée : ");

        jLabel2.setText("Factures à ne pas envoyer : ");

        lstFacturesOk.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstFacturesOk);

        lstFacturesNok.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstFacturesNok);

        btnNotSend.setText("Ne pas envoyer cette facture");
        btnNotSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotSendActionPerformed(evt);
            }
        });

        btnSend.setText("Envoyer cette facture");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnEnvoyerFactures.setText("Lancer l'ordre d'envoi des factures");
        btnEnvoyerFactures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnvoyerFacturesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEnvoyerFactures, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(41, 41, 41)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnNotSend)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNotSend)
                    .addComponent(btnSend))
                .addGap(18, 18, 18)
                .addComponent(btnEnvoyerFactures)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnvoyerFacturesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnvoyerFacturesActionPerformed
        ArrayList<String> listFacturesANePasEnvoyer = new ArrayList<>();
        for(int i = 0; i < dlmFacturesNok.size(); i++)
            listFacturesANePasEnvoyer.add((String)dlmFacturesNok.get(i));
        
        for(int i = 0; i < listFacturesANePasEnvoyer.size(); i++)
            System.out.println(listFacturesANePasEnvoyer.get(i));
        
        byte[] signature = Cryptographie.CreateSignature(PathKeyStore, AliasKeyStore, PasswordKeyStore, PasswordKey, listFacturesANePasEnvoyer);
        SendBills sb = new SendBills(listFacturesANePasEnvoyer, signature);
        try 
        {
            ObjectOutputStream oos = new ObjectOutputStream(CSocket.getOutputStream());
            RequeteBISAMAP req = new RequeteBISAMAP(RequeteBISAMAP.REQUEST_SEND_BILLS, sb);
            oos.writeObject(req);
            oos.flush();
            
            /* Attente de réponse */
            ObjectInputStream ois = new ObjectInputStream(CSocket.getInputStream());
            ReponseBISAMAP rep = (ReponseBISAMAP)ois.readObject();
            
            if(rep.getCode() == ReponseBISAMAP.REPONSE_OK)
                JOptionPane.showMessageDialog(this, (String)rep.getResult(), "Envoi des factures", JOptionPane.INFORMATION_MESSAGE);
            else
                JOptionPane.showMessageDialog(this, (String)rep.getResult(), "Erreur lors de l'envoi des factures", JOptionPane.ERROR_MESSAGE);
        }
        catch (IOException ex)
        {
            Logger.getLogger(SendBillsForm.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (ClassNotFoundException ex)
        {
            Logger.getLogger(SendBillsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnvoyerFacturesActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        String idFacture = (String)lstFacturesNok.getSelectedValue();
        dlmFacturesOk.addElement(idFacture);
        dlmFacturesNok.removeElement(idFacture);
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnNotSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotSendActionPerformed
        String idFacture = (String)lstFacturesOk.getSelectedValue();
        dlmFacturesNok.addElement(idFacture);
        dlmFacturesOk.removeElement(idFacture);
    }//GEN-LAST:event_btnNotSendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendBillsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendBillsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendBillsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendBillsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SendBillsForm dialog = new SendBillsForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnvoyerFactures;
    private javax.swing.JButton btnNotSend;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstFacturesNok;
    private javax.swing.JList lstFacturesOk;
    // End of variables declaration//GEN-END:variables
}
