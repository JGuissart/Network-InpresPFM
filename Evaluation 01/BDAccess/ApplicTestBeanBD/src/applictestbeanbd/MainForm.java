/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applictestbeanbd;

import AccessBD.BeanBDAccess;
import AccessBD.BeanBDMySql;
import AccessBD.BeanBDOracle;
import Queries.QueryInsert;
import Queries.QuerySelect;
import Queries.QueryUpdate;
import ThreadsBeanBDAccess.ThreadConsultation;
import ThreadsBeanBDAccess.ThreadUpdate;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Julien
 */
public class MainForm extends javax.swing.JFrame
{
    private BeanBDAccess bean;
    private String Port;
    private String Schema;
    private String Password;
    private String AdresseIp;
    private QuerySelect QS;
    private QueryUpdate QU;
    private QueryInsert QI;
    
    /**
     * Creates new form MainForm
     */
    public MainForm()
    {
        initComponents();
        DefaultComboBoxModel DCBM = new DefaultComboBoxModel () ;
        DCBM.addElement("Contenu de la table");
        DCBM.addElement("Nombre de tuples dans la table");
        cbxSelection.setModel(DCBM);
        QS = null;
        QU = null;
        QI = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlConsultation = new javax.swing.JPanel();
        lblSelection = new javax.swing.JLabel();
        cbxSelection = new javax.swing.JComboBox();
        lblCondition = new javax.swing.JLabel();
        tfdCondition = new javax.swing.JTextField();
        btnConsultation = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtarResultat = new javax.swing.JTextArea();
        pnlMaj = new javax.swing.JPanel();
        btnMaj = new javax.swing.JButton();
        btnInsertion = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblTable3 = new javax.swing.JLabel();
        tfdTable = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuConnexion = new javax.swing.JMenu();
        miConnexion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlConsultation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblSelection.setText("Selection :");

        lblCondition.setText("Condition :");

        btnConsultation.setText("Consultation");
        btnConsultation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConsultationLayout = new javax.swing.GroupLayout(pnlConsultation);
        pnlConsultation.setLayout(pnlConsultationLayout);
        pnlConsultationLayout.setHorizontalGroup(
            pnlConsultationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConsultationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConsultation, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                    .addGroup(pnlConsultationLayout.createSequentialGroup()
                        .addGroup(pnlConsultationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSelection)
                            .addComponent(lblCondition))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlConsultationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbxSelection, javax.swing.GroupLayout.Alignment.TRAILING, 0, 216, Short.MAX_VALUE)
                            .addComponent(tfdCondition))))
                .addContainerGap())
        );
        pnlConsultationLayout.setVerticalGroup(
            pnlConsultationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConsultationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelection))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlConsultationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCondition)
                    .addComponent(tfdCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConsultation)
                .addContainerGap())
        );

        txtarResultat.setColumns(20);
        txtarResultat.setRows(5);
        jScrollPane2.setViewportView(txtarResultat);

        pnlMaj.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlMaj.setPreferredSize(new java.awt.Dimension(307, 187));

        btnMaj.setText("Lancer la mise à jour et l'insertion");
        btnMaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMajActionPerformed(evt);
            }
        });

        btnInsertion.setText("Préparer les données à insérer");
        btnInsertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertionActionPerformed(evt);
            }
        });

        btnUpdate.setText("Préparer les données à modifier");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMajLayout = new javax.swing.GroupLayout(pnlMaj);
        pnlMaj.setLayout(pnlMajLayout);
        pnlMajLayout.setHorizontalGroup(
            pnlMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMajLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                    .addComponent(btnInsertion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlMajLayout.setVerticalGroup(
            pnlMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMajLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInsertion)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnMaj)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        lblTable3.setText("Table  : ");

        tfdTable.setEditable(false);
        tfdTable.setText("Destination");

        menuConnexion.setText("Connexion");

        miConnexion.setText("Connexion à une base de données");
        miConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miConnexionActionPerformed(evt);
            }
        });
        menuConnexion.add(miConnexion);

        jMenuBar1.add(menuConnexion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTable3)
                        .addGap(18, 18, 18)
                        .addComponent(tfdTable))
                    .addComponent(pnlConsultation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlMaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTable3)
                            .addComponent(tfdTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(pnlConsultation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlMaj, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miConnexionActionPerformed
        ChoixBdForm CBDF = new ChoixBdForm(this, true);
        CBDF.setVisible(true);
        if (CBDF.getChoix() == 0)
            bean = new BeanBDMySql(CBDF.getAdresseIp(), CBDF.getPort(), CBDF.getSchema(), "root", "");
        else
            bean = new BeanBDOracle(CBDF.getAdresseIp(), CBDF.getPort(), CBDF.getSID(), CBDF.getSchema(), CBDF.getPassword());
    }//GEN-LAST:event_miConnexionActionPerformed

    private void btnConsultationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultationActionPerformed
        txtarResultat.setText("");
        ThreadConsultation TC = new ThreadConsultation(txtarResultat, bean);
        if (cbxSelection.getSelectedIndex() == 0) // Contenu de la table
        {
            if (!tfdCondition.getText().isEmpty()) // Requête conditionnée
                QS = new QuerySelect("*", tfdTable.getText(), tfdCondition.getText());
            else
                QS = new QuerySelect("*", tfdTable.getText());
        }
        else // Nombre de tuples dans la table
        {
            if (!tfdCondition.getText().isEmpty()) // Requête conditionnée
                QS = new QuerySelect("COUNT(*)", tfdTable.getText(), tfdCondition.getText());
            else
                QS = new QuerySelect("COUNT(*)", tfdTable.getText());
        }
        TC.setQuery(QS);
        TC.start();
        QS = null;
    }//GEN-LAST:event_btnConsultationActionPerformed

    private void btnMajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMajActionPerformed
        txtarResultat.setText("");
        /**** UPDATE/INSERT ****/
        ThreadUpdate TU = new ThreadUpdate(bean);
        /**** SELECTION ****/
        ThreadConsultation TC = new ThreadConsultation(txtarResultat, bean);
        if (cbxSelection.getSelectedIndex() == 0) // Contenu de la table
        {
            if (!tfdCondition.getText().isEmpty()) // Requête conditionnée
                QS = new QuerySelect("*", tfdTable.getText(), tfdCondition.getText());
            else
                QS = new QuerySelect("*", tfdTable.getText());
        }
        else // Nombre de tuples dans la table
        {
            if (!tfdCondition.getText().isEmpty()) // Requête conditionnée
                QS = new QuerySelect("COUNT(*)", tfdTable.getText(), tfdCondition.getText());
            else
                QS = new QuerySelect("COUNT(*)", tfdTable.getText());
        }
        
        /**** Lancement des threads ****/
        TU.setUpdate(QU);
        TU.setInsert(QI);
        TU.start();
        TC.setQuery(QS);
        TC.start();
        QS = null;
        QU = null;
        QI = null;
    }//GEN-LAST:event_btnMajActionPerformed

    private void btnInsertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertionActionPerformed
        InsertForm IF = new InsertForm(this, true, bean, tfdTable.getText());
        IF.setVisible(true);
        QI = IF.getQuery();
    }//GEN-LAST:event_btnInsertionActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        UpdateForm UF = new UpdateForm(this, true, bean, tfdTable.getText());
        UF.setVisible(true);
        QU = UF.getQuery();
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultation;
    private javax.swing.JButton btnInsertion;
    private javax.swing.JButton btnMaj;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbxSelection;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCondition;
    private javax.swing.JLabel lblSelection;
    private javax.swing.JLabel lblTable3;
    private javax.swing.JMenu menuConnexion;
    private javax.swing.JMenuItem miConnexion;
    private javax.swing.JPanel pnlConsultation;
    private javax.swing.JPanel pnlMaj;
    private javax.swing.JTextField tfdCondition;
    private javax.swing.JTextField tfdTable;
    private javax.swing.JTextArea txtarResultat;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the Port
     */
    public String getPort() {
        return Port;
    }

    /**
     * @param Port the Port to set
     */
    public void setPort(String Port) {
        this.Port = Port;
    }

    /**
     * @return the Schema
     */
    public String getSchema() {
        return Schema;
    }

    /**
     * @param Schema the Schema to set
     */
    public void setSchema(String Schema) {
        this.Schema = Schema;
    }

    /**
     * @return the Password
     */
    public String getPassword() {
        return Password;
    }

    /**
     * @param Password the Password to set
     */
    public void setPassword(String Password) {
        this.Password = Password;
    }

    /**
     * @return the AdresseIp
     */
    public String getAdresseIp() {
        return AdresseIp;
    }

    /**
     * @param AdresseIp the AdresseIp to set
     */
    public void setAdresseIp(String AdresseIp) {
        this.AdresseIp = AdresseIp;
    }
}
